##AUTHOR: chunjie liu;
##TIME:2013-11-05;
##steps stuck you in GATK; 

##!1
##input of reference hg19.fasta needs index;
##reference file need two index,
##the extension of one index file is .fai
##the other is .dict means 

##--first, build the index of hg19.fasta with tool samtools;command lines as follows:

$samtools faidx ref.fasta 

##you will get a file with extension .fai.\
##--second, use picard to build dictionary of ref; command as follows:

$java -jar $Pdir/CreateSequenceDictionary.jar \
REFERENCE=ref.fasta\
OUTPUT=ref.dict

##indexing reference for GATK done;


##!2
##infact, i did mapping with bwa,it's very easy,now i am talking about GATK,so all processes in this file is the last steps whith GATK in the so called Phase I,Phase II and Phase III;
##mark PCR duplicates,owing to bia of PCR,some reads mightbe overpresented, they will affects downstram analysis; so GATK wants to pickup the duplicates with tool picard, picard will find out dupliting read,and flag them.
##it's ok not to remove the flag reads when dealing wiht GATK;because when Reacl,GATK will neglect reads with FLAG;
##so here is command to mark duplicates:

$java -Xmx20g -Djava.io.tmpdir=/tmp \
-jar $Pdir/MarkDuplicates.jar \
INPUT=NA12878_2x250_PCRfree_20.bam \
OUTPUT=NA12878.sam.marked.bam \
METRICS_FILE=mark.metrics \
VALIDATION_STRINGENCY=LENIENT \
CREATE_INDEX=true 





##in the real process,we should recalibrate bam file after marking duplicates;
##i am gonna explain why should we recalibrate the marked bam file before calling in the future;
##here we foucus on the options and parameters in walking,
##i think this is the basis for mastering GATK in you personal process

##!3
#############global options&parameters####
--analysis_type /-T(required String) 
//two words in the brackets, "required" means this parameter is needed in any walking
//because it specifies routine or tool or walking you use;
//"String" specifies data type you input;


--reference_sequence /-R(File)
//this parameter specifies reference genome, reference must be indexed as said before;


--input_file /-I(List[String]with default value [])
//input bam file[s], "List[String]" means you can input more than one file,defaul value is []
--intervals /-L(List[intervalBinding[Feture]])
//specify region,all operations(walkings) are performed in limited specified region not all genome;
//these two parameters can be set several times 


--logging_level /-l(String with default value INFO) 
//control std output to screen,shoosing different value returns different result,
//there are three values:
//INFO is defualt,outputs all information to screen,
//ERROR is optional,outputs ERROR or FATAL records
//FATAL,outputs FATAL records;
//tips:eg.running VariantFiltration will output a lot of WARNING,we should shoose ERROR


--num_threads /-nt(Interger with default value 1)
//set threads, few walking supports several threads
//we can choose this option to accelerate processing
//it will output error if walking does not support multi-thread.


###########options&parameters in walking UnifiedGenotyper######
--out /-o(VCFWriter with default value stdout)
//what is VCF file read here:http://www.1000genomes.org/wiki/Analysis/Variant%20Call%20Format/vcf-variant-call-format-version-41


--output_mode /-out_mode(OUTPUT_MODE with default value EMIT_VARIANTS_ONLY)
//there are three modes to choose,
//EMIT_VARAINTS_ONLY, outputs variant sites including SNPs INDELs
//EMIT_ALL_CONFIDENT_SITES,outputs sites consistent with ref. except variant sites
//EMIT_ALLS_SITES,outputs all called sites(outputs sites not covered)


--standard_min_confidence_threshold_for_emitting /-stand_emit_conf(double with default value 30.0)
//output records which QUAL more than this value
--standard_min_confidence_threshold_for_emitting /-stand_call_conf(double with default value 30.0)
//minimal confident value,stand_emit_conf<record's QUAL<stand_call_conf will lablled LowQual
//in general, QUAL>30 is confident when the coverage is more than 10x 


--genotype_likelihoods_model /-glm(Model with default value SNP)
//calling model to employ,SNP is default
//INDEL is available and will output indel calling information
//BOTH is availble for calling both together.


--comp/-comp(List[RodBinding{VariantContext]]with default value [])
//comparison VCF file, if a call overlaps with a record from the provided comp track(previous result  VCF file)
//the INFO fild will be annotated as such in the  output with the track name
//(e.g. -comp:FOO, will hava 'FOO' int the INFO field).Records that are filterd in
//the comp track will be ignored, note that 'dbSNP' has been special-cased
//--comp binds reference orderd data,


--dbsnp /-D(RodBinding[VariantContext]with default value none)
//this option is similiar to comp,but dbSNP with annoation will populate ID field


################option&parameter in VariantFiltration##########
###.g.
$java -Xmx20g -jar $GATKdir/GenomeAnalysisTK.jar \
-R ref.fasta \
-T VaraintFiltration \
-o output.vcf \
--variant input.vcf \
--filterExpression "AB<0.2 ||MQ0>50 " \
--filterName "Nov09filters" \
--mask mask.vcf \
--maskName InDel
--------------------------------------

--variant /-V(required RodBinding[VaraintContext])
//Variants from this VCF file are used by this tool as input.
//the file must be required, and the file must contain standard VCF header lines,but can be empty


--filterExpression 


--out /-o(VCFWriter with default value stdout)
//records that filtered would not be removed but marked.
//populate th FILTER field.


--clusterSize /-cluster(Integer with default value 3)
--clusterWindowSize /-window(Integer with default value 0)
//these two parameters are used together,
//to specify number of variants in fix window,
//e.g. -window 10,-cluster 3 which means: there is no more than 3 varaints in 10bp;
//the record will labelled with SnpCluster if it does not follow the rule


--filterExpression /-filter(ArrayList[string] with default value[])
--filterName /-filterName(ArrayList[string] with default value[])
//these two parameters are used together,
//filterName is symbol to label the records that are filtered by Expression
e.g.
--filterExpression "AB<0.2 ||MQ0>50" 
--filterName "novo9filters"


--invalidatePreviousFilters(boolean with default value false)
//rm records in filtered VCF
 

--mask(RodBinding[Feature]with default value none)
--maskName /-maskName(String with default value Mask)
//any variant which overlaps entris from the provided mask will be filtered

--missingValuesInExpressionsShouldEvaluateAsFailing(Booling with default value false)
//


#####################DepthOfCoverage#########
e.g.
$java -Xmx20g -jar $GATKdir/GenomeAnalysisTK.jar \
-R ref.fasta \
-T DepthOfCoverage \
-o file_name \
-I input_bam.list \
-geneList refSeq.sorted.txt \
-pt readgroup \
-ct 4 -ct 6 -ct 10 \
-L myCaptureGene.interval_list

#####
--out / -o (Map[DoCOutputType,PrintStream] with default value None)

##another notification:the input of bam file to GATK also need index,
##if there is no index of a bam file, we can use samtools to build index;

$samtools index file.bam

##you will get a file with .bai as its extension

 ##convert SAM to BAM and sort
$java -Xmx20g -Djava.io.tmpdir=/tmp \
 -jar $Pdir/SortSam.jar \
 SO=coordinate \
 INPUT=align-hg19.sam \
 OUTPUT=align-hg19.sam.bam \
 VALIDATION_STRINGENCY=LENIENT \
 CREATE_INDEX=true \

##merge sample bam
$java -Xmx20g \
-jar $Pdir/MergeSamFiles.jar \
INPUT=input1 \
INPUT=input2 \
OUTPUT=sample.bam 

##dedup.bam <-MarkDuplicates(sample.bam)
$java -Xmx20g \
-jar $Pdir/MarkDuplicates.jar \
MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=8000 \
INPUT=sample.sort.bam \
OUTPUT=sample.dedup.bam \
MATRICS_FILE=sample.dedup.metrics


##realigned.bam<-realign(dedup.bam)[with know sites included if available]
$java -Xmx20g \
-jar $GATKdir/GenomeAnalysisTK.jar \
-R ref.fasta \
-T RealignerTargetCreator \
-I sample.dedup.bam \
-o sample.realn.intervals \

$java -Xmx20g \
-jar $GATKdir/GenomeAnalysisTK.jar \
-R ref.fasta \
-T IndelRealigner \
-targetIntervals sample.realn.intervals \
-I sample.dedup.bam \
-o sample.realn.bam

##recal<-recal(realigned.bam)
##sample.bam<-realign.bam
##To recalibrate the result of realigned file
##mapping result scores can not reflect real score,take efforts to eliminate bias to get correction
##it's very important for low-coverage data to do this step to decrease frequency of FP
##for high-coverage data is optional
$java -Xmx20g Djava.io.tmpdir=/tmp \
-jar $GATKdir/GenomeAnalysisTK.jar \
-R ref.fasta \
-T BaseRecalibrator \
-I sample.realn.bam \
-knownSites dnSNP.vcf \
-knownSites INDEL.vcf \
-o sample.recal_data.grp 


$java -Xmx20g -Djava.io.tmpdir=/tmp \
-jar $GATKdir/GenomeAnalysisTK.jar \
-R ref.fasta \
-T PrintReads \
-I sample.realn.bam \
-BQSR sample.recal_data.grp \
-o sample.recal.bam 


$java -Xmx20g -Djava.io.tmpdir=tmp/ \
  -jar $GATKdir/GenomeAnalysisTK.jar \
  -T ReduceReads \
  -R ref.fasta \
  -I sample.recal.bam \
  -o sample.recal.reduced.bam \

























